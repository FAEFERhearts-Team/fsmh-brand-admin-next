
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.9.0
 * Query Engine version: 81e4af48011447c3cc503a190e86995b66d2a28e
 */
Prisma.prismaVersion = {
  client: "6.9.0",
  engine: "81e4af48011447c3cc503a190e86995b66d2a28e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AlarmScalarFieldEnum = {
  alarm_id: 'alarm_id',
  content: 'content',
  category: 'category',
  receiver_id: 'receiver_id',
  is_read: 'is_read',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  link: 'link',
  detail_category: 'detail_category',
  image: 'image',
  link_id: 'link_id'
};

exports.Prisma.Alarm_failedScalarFieldEnum = {
  alarm_id: 'alarm_id',
  content: 'content',
  category: 'category',
  receiver_id: 'receiver_id',
  is_read: 'is_read',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  link: 'link',
  detail_category: 'detail_category',
  image: 'image',
  link_id: 'link_id',
  error_message: 'error_message'
};

exports.Prisma.App_versionScalarFieldEnum = {
  version_id: 'version_id',
  android_latest_version: 'android_latest_version',
  ios_latest_version: 'ios_latest_version',
  mandatory: 'mandatory',
  update_available: 'update_available',
  critical_update: 'critical_update',
  release_notes: 'release_notes',
  created_at: 'created_at',
  updated_at: 'updated_at',
  ios_latest_mandatory_version: 'ios_latest_mandatory_version',
  android_latest_mandatory_version: 'android_latest_mandatory_version'
};

exports.Prisma.AskScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  answer: 'answer',
  question: 'question',
  member_user_id: 'member_user_id',
  answered_at: 'answered_at'
};

exports.Prisma.Banner_brand_homeScalarFieldEnum = {
  banner_id: 'banner_id',
  brand_id: 'brand_id',
  brand_home_directory_original: 'brand_home_directory_original',
  brand_home_filename_original: 'brand_home_filename_original',
  brand_home_fullurl_original: 'brand_home_fullurl_original',
  brand_home_directory_resized: 'brand_home_directory_resized',
  brand_home_filename_resized: 'brand_home_filename_resized',
  brand_home_fullurl_resized: 'brand_home_fullurl_resized',
  btype: 'btype',
  active: 'active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Banner_brand_listScalarFieldEnum = {
  banner_id: 'banner_id',
  brand_id: 'brand_id',
  brand_list_directory_original: 'brand_list_directory_original',
  brand_list_filename_original: 'brand_list_filename_original',
  brand_list_fullurl_original: 'brand_list_fullurl_original',
  brand_list_directory_resized: 'brand_list_directory_resized',
  brand_list_filename_resized: 'brand_list_filename_resized',
  brand_list_fullurl_resized: 'brand_list_fullurl_resized',
  active: 'active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Banner_brand_storyScalarFieldEnum = {
  banner_id: 'banner_id',
  brand_id: 'brand_id',
  brand_story_directory_original: 'brand_story_directory_original',
  brand_story_filename_original: 'brand_story_filename_original',
  brand_story_fullurl_original: 'brand_story_fullurl_original',
  brand_story_directory_resized: 'brand_story_directory_resized',
  brand_story_filename_resized: 'brand_story_filename_resized',
  brand_story_fullurl_resized: 'brand_story_fullurl_resized',
  sorting: 'sorting',
  active: 'active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Banner_brand_thumbnailScalarFieldEnum = {
  thumbnail_id: 'thumbnail_id',
  brand_id: 'brand_id',
  brand_thumbnail_directory_original: 'brand_thumbnail_directory_original',
  brand_thumbnail_filename_original: 'brand_thumbnail_filename_original',
  brand_thumbnail_fullurl_original: 'brand_thumbnail_fullurl_original',
  brand_thumbnail_directory_resized: 'brand_thumbnail_directory_resized',
  brand_thumbnail_filename_resized: 'brand_thumbnail_filename_resized',
  brand_thumbnail_fullurl_resized: 'brand_thumbnail_fullurl_resized',
  active: 'active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Banner_pick_brandScalarFieldEnum = {
  banner_id: 'banner_id',
  brand_id: 'brand_id',
  pick_brand_directory_original: 'pick_brand_directory_original',
  pick_brand_filename_original: 'pick_brand_filename_original',
  pick_brand_fullurl_original: 'pick_brand_fullurl_original',
  pick_brand_directory_resized: 'pick_brand_directory_resized',
  pick_brand_filename_resized: 'pick_brand_filename_resized',
  pick_brand_fullurl_resized: 'pick_brand_fullurl_resized',
  merchandise_id: 'merchandise_id',
  active: 'active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Base_infoScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  address: 'address',
  business_name: 'business_name',
  business_number: 'business_number',
  ceo: 'ceo',
  customer_service: 'customer_service',
  email: 'email',
  tell: 'tell',
  online_sales_number: 'online_sales_number'
};

exports.Prisma.Body_shapeScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  creator_body_type: 'creator_body_type',
  match_rate: 'match_rate',
  member_body_type: 'member_body_type',
  print_text: 'print_text',
  creator_body_type_backup: 'creator_body_type_backup',
  member_body_type_backup: 'member_body_type_backup'
};

exports.Prisma.Brand_adjustmentScalarFieldEnum = {
  brand_adjustment_id: 'brand_adjustment_id',
  brand_id: 'brand_id',
  order_map_merchandise_id: 'order_map_merchandise_id',
  sales_amount: 'sales_amount',
  adjust_amount: 'adjust_amount',
  charge: 'charge',
  charge_explanation: 'charge_explanation',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  adjust_complete_at: 'adjust_complete_at'
};

exports.Prisma.Brand_admin_userScalarFieldEnum = {
  id: 'id',
  username: 'username',
  passwd: 'passwd',
  full_name: 'full_name',
  brand_id: 'brand_id',
  hq_user: 'hq_user',
  created_by: 'created_by',
  created_at: 'created_at',
  updated_by: 'updated_by',
  updated_at: 'updated_at',
  random_code: 'random_code'
};

exports.Prisma.Brand_applicationScalarFieldEnum = {
  id: 'id',
  brand_style: 'brand_style',
  brand_name: 'brand_name',
  brand_website: 'brand_website',
  other_sales_channel: 'other_sales_channel',
  reference_url: 'reference_url',
  company_introduction: 'company_introduction',
  company_name: 'company_name',
  business_registration_number: 'business_registration_number',
  company_address: 'company_address',
  number_of_sku: 'number_of_sku',
  parellel_import: 'parellel_import',
  wholesale: 'wholesale',
  name_person_in_charge: 'name_person_in_charge',
  phone_person_in_charge: 'phone_person_in_charge',
  cellphone: 'cellphone',
  email_address: 'email_address',
  created_at: 'created_at',
  agreeto_terms: 'agreeto_terms',
  agreeto_collecting: 'agreeto_collecting',
  agreeto_policy: 'agreeto_policy',
  approve_status: 'approve_status'
};

exports.Prisma.Brand_eventScalarFieldEnum = {
  event_id: 'event_id',
  brand_id: 'brand_id',
  main_image_directory_original: 'main_image_directory_original',
  main_image_filename_original: 'main_image_filename_original',
  main_image_fullurl_original: 'main_image_fullurl_original',
  main_image_directory_resized: 'main_image_directory_resized',
  main_image_filename_resized: 'main_image_filename_resized',
  main_image_fullurl_resized: 'main_image_fullurl_resized',
  subject: 'subject',
  content: 'content',
  content_image_directory_original: 'content_image_directory_original',
  content_image_filename_original: 'content_image_filename_original',
  content_image_fullurl_original: 'content_image_fullurl_original',
  content_image_directory_resized: 'content_image_directory_resized',
  content_image_filename_resized: 'content_image_filename_resized',
  content_image_fullurl_resized: 'content_image_fullurl_resized',
  sorting: 'sorting',
  active: 'active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Brand_grade_graphScalarFieldEnum = {
  brand_grade_graph_id: 'brand_grade_graph_id',
  grade: 'grade',
  monthly_sales_amount: 'monthly_sales_amount',
  monthly_sales_count: 'monthly_sales_count',
  charge_rate: 'charge_rate',
  usage_fee: 'usage_fee',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  icon_url: 'icon_url',
  monthly_sales_amount_condition: 'monthly_sales_amount_condition',
  monthly_sales_count_condition: 'monthly_sales_count_condition'
};

exports.Prisma.Brand_heartScalarFieldEnum = {
  heart_id: 'heart_id',
  brand_id: 'brand_id',
  member_id: 'member_id',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Brand_storyScalarFieldEnum = {
  story_id: 'story_id',
  brand_id: 'brand_id',
  subject: 'subject',
  content: 'content',
  active: 'active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Brand_story_imageScalarFieldEnum = {
  story_image_id: 'story_image_id',
  story_id: 'story_id',
  brand_id: 'brand_id',
  brand_story_directory_original: 'brand_story_directory_original',
  brand_story_filename_original: 'brand_story_filename_original',
  brand_story_fullurl_original: 'brand_story_fullurl_original',
  brand_story_directory_resized: 'brand_story_directory_resized',
  brand_story_filename_resized: 'brand_story_filename_resized',
  brand_story_fullurl_resized: 'brand_story_fullurl_resized',
  sorting: 'sorting',
  active: 'active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Color_chartScalarFieldEnum = {
  color_id: 'color_id',
  color_name_eng: 'color_name_eng',
  color_name: 'color_name',
  hex_code: 'hex_code',
  brand_id: 'brand_id'
};

exports.Prisma.CommentScalarFieldEnum = {
  comment_id: 'comment_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  child_comment_count: 'child_comment_count',
  content: 'content',
  is_deleted: 'is_deleted',
  feed_id: 'feed_id',
  parent_comment_id: 'parent_comment_id',
  member_user_id: 'member_user_id',
  deleted_by: 'deleted_by',
  deleted_reason: 'deleted_reason'
};

exports.Prisma.CouponScalarFieldEnum = {
  id: 'id',
  name: 'name',
  discount_type: 'discount_type',
  discount_rate: 'discount_rate',
  start_date: 'start_date',
  end_date: 'end_date',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  system_code: 'system_code',
  discount_amount: 'discount_amount',
  is_active: 'is_active',
  period_time: 'period_time',
  limit_discount_amount: 'limit_discount_amount',
  is_auto_apply: 'is_auto_apply'
};

exports.Prisma.Coupon_descriptionsScalarFieldEnum = {
  id: 'id',
  coupon_id: 'coupon_id',
  description: 'description',
  is_deleted: 'is_deleted',
  sort_order: 'sort_order',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CouriersScalarFieldEnum = {
  courier_id: 'courier_id',
  courier_name: 'courier_name',
  courier_code: 'courier_code',
  sorting: 'sorting'
};

exports.Prisma.DiaryScalarFieldEnum = {
  diary_id: 'diary_id',
  title: 'title',
  content: 'content',
  is_private: 'is_private',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  member_id: 'member_id',
  written_date: 'written_date'
};

exports.Prisma.Faeferhouse_profileScalarFieldEnum = {
  profile_id: 'profile_id',
  member_id: 'member_id',
  title: 'title',
  background_color: 'background_color',
  introduce: 'introduce',
  today_mood_weather: 'today_mood_weather',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  like_count: 'like_count'
};

exports.Prisma.Faeferhouse_profile_fileScalarFieldEnum = {
  file_id: 'file_id',
  member_id: 'member_id',
  file_type: 'file_type',
  cdn_url: 'cdn_url',
  s3_url: 's3_url',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  profile_id: 'profile_id'
};

exports.Prisma.Faeferhouse_profile_visitScalarFieldEnum = {
  visit_id: 'visit_id',
  profile_id: 'profile_id',
  visitor_id: 'visitor_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Faq_categoryScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  activation: 'activation',
  title: 'title',
  sorting: 'sorting'
};

exports.Prisma.Fashion_storyScalarFieldEnum = {
  story_id: 'story_id',
  member_id: 'member_id',
  title: 'title',
  content: 'content',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  views: 'views',
  fixed_at: 'fixed_at'
};

exports.Prisma.Fashion_story_fileScalarFieldEnum = {
  file_id: 'file_id',
  story_id: 'story_id',
  member_id: 'member_id',
  file_type: 'file_type',
  s3_url: 's3_url',
  cdn_url: 'cdn_url',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Fashion_story_itemScalarFieldEnum = {
  item_id: 'item_id',
  story_id: 'story_id',
  category: 'category',
  brand: 'brand',
  price: 'price',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  member_id: 'member_id',
  name: 'name'
};

exports.Prisma.Fashion_story_viewScalarFieldEnum = {
  view_id: 'view_id',
  story_id: 'story_id',
  viewer_id: 'viewer_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.FeedScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  comment_count: 'comment_count',
  feed_type: 'feed_type',
  gender: 'gender',
  is_deleted: 'is_deleted',
  percent: 'percent',
  review: 'review',
  short_form_url: 'short_form_url',
  shotform_url: 'shotform_url',
  title: 'title',
  total_time: 'total_time',
  member_user_id: 'member_user_id',
  gender_temp: 'gender_temp',
  inactive_reason: 'inactive_reason',
  status_changed_by: 'status_changed_by',
  status_changed_at: 'status_changed_at',
  view_count: 'view_count',
  like_count: 'like_count',
  order_count: 'order_count'
};

exports.Prisma.Feed_activityScalarFieldEnum = {
  feed_activity_id: 'feed_activity_id',
  activity: 'activity',
  feed_id: 'feed_id',
  writer_id: 'writer_id',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Feed_clothing_analysisScalarFieldEnum = {
  analysis_id: 'analysis_id',
  feed_file_id: 'feed_file_id',
  category: 'category',
  fit: 'fit',
  color: 'color',
  length: 'length',
  print: 'print',
  material: 'material',
  style: 'style',
  neckline: 'neckline',
  sleeve: 'sleeve',
  created_at: 'created_at',
  updated_at: 'updated_at',
  detail_category: 'detail_category',
  silhouette: 'silhouette'
};

exports.Prisma.Feed_filesScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  captured_resize_image_url: 'captured_resize_image_url',
  duration: 'duration',
  file_type: 'file_type',
  image_origin_file_name: 'image_origin_file_name',
  image_server_file_name: 'image_server_file_name',
  image_url: 'image_url',
  is_deleted: 'is_deleted',
  rotation: 'rotation',
  thumbnail_url: 'thumbnail_url',
  feed_id: 'feed_id',
  member_user_id: 'member_user_id',
  s3_key: 's3_key',
  omnious_key: 'omnious_key'
};

exports.Prisma.Feed_likesScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted',
  feed_id: 'feed_id',
  member_user_id: 'member_user_id'
};

exports.Prisma.Feed_merchsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  etc: 'etc',
  feed_id: 'feed_id',
  merchandise_id: 'merchandise_id',
  merch_option_id: 'merch_option_id',
  is_entrusted: 'is_entrusted',
  similar_score: 'similar_score',
  member_id: 'member_id'
};

exports.Prisma.Feed_placeScalarFieldEnum = {
  feed_place_id: 'feed_place_id',
  place: 'place',
  feed_id: 'feed_id',
  writer_id: 'writer_id',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Feed_searchScalarFieldEnum = {
  search_id: 'search_id',
  keyword: 'keyword',
  feed_id: 'feed_id',
  created_by: 'created_by',
  search_count: 'search_count',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Feed_seasonScalarFieldEnum = {
  feed_season_id: 'feed_season_id',
  season: 'season',
  feed_id: 'feed_id',
  writer_id: 'writer_id',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Feed_storeScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted',
  feed_id: 'feed_id',
  member_user_id: 'member_user_id'
};

exports.Prisma.Feed_stylesScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  feed_id: 'feed_id',
  style_id: 'style_id'
};

exports.Prisma.Fsmh_eventScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  content: 'content',
  title: 'title'
};

exports.Prisma.Main_ad_sentenceScalarFieldEnum = {
  id: 'id',
  sentence: 'sentence',
  sorting: 'sorting',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted'
};

exports.Prisma.Member_access_logScalarFieldEnum = {
  log_id: 'log_id',
  member_id: 'member_id',
  ip: 'ip',
  device: 'device',
  access_at: 'access_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Member_accountScalarFieldEnum = {
  account_id: 'account_id',
  member_id: 'member_id',
  bank: 'bank',
  account_number: 'account_number',
  account_holder: 'account_holder',
  is_certified: 'is_certified',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Member_blockScalarFieldEnum = {
  member_block_id: 'member_block_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted',
  blocked_member_id: 'blocked_member_id',
  blocking_member_id: 'blocking_member_id'
};

exports.Prisma.Member_body_measurementScalarFieldEnum = {
  member_body_measurement_id: 'member_body_measurement_id',
  member_id: 'member_id',
  shoulder_width: 'shoulder_width',
  bust_circumference: 'bust_circumference',
  waist_circumference_at_navel: 'waist_circumference_at_navel',
  hip_circumference: 'hip_circumference',
  bust_width: 'bust_width',
  waist_width: 'waist_width',
  waist_width_at_navel: 'waist_width_at_navel',
  hip_width: 'hip_width',
  back_length: 'back_length',
  back_length_at_navel: 'back_length_at_navel',
  torso_vertical_length: 'torso_vertical_length',
  hip_vertical_length: 'hip_vertical_length',
  arm_length: 'arm_length',
  upper_arm_length: 'upper_arm_length',
  upper_arm_circumference: 'upper_arm_circumference',
  elbow_circumference: 'elbow_circumference',
  wrist_circumference: 'wrist_circumference',
  knee_height: 'knee_height',
  thigh_straight_length: 'thigh_straight_length',
  thigh_circumference: 'thigh_circumference',
  mid_thigh_circumference: 'mid_thigh_circumference',
  knee_circumference: 'knee_circumference',
  calf_circumference: 'calf_circumference',
  minimum_calf_circumference: 'minimum_calf_circumference',
  maximum_ankle_circumference: 'maximum_ankle_circumference',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  waist_circumference: 'waist_circumference'
};

exports.Prisma.Member_couponsScalarFieldEnum = {
  id: 'id',
  member_id: 'member_id',
  coupon_id: 'coupon_id',
  issued_at: 'issued_at',
  used_at: 'used_at',
  expired_at: 'expired_at',
  is_used: 'is_used',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_expired: 'is_expired',
  phone_number: 'phone_number'
};

exports.Prisma.Member_followsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  followed_member_id: 'followed_member_id',
  is_deleted: 'is_deleted',
  member_user_id: 'member_user_id',
  size_story_readable: 'size_story_readable'
};

exports.Prisma.Member_gradeScalarFieldEnum = {
  grade_id: 'grade_id',
  name: 'name',
  total_purchase_amount_condition: 'total_purchase_amount_condition',
  order_lines_condition: 'order_lines_condition',
  feeds_condition: 'feeds_condition',
  comments_condition: 'comments_condition',
  order_line_charge_rate: 'order_line_charge_rate',
  purchase_discount_rate: 'purchase_discount_rate',
  purchase_point_rate: 'purchase_point_rate',
  normal_review_point: 'normal_review_point',
  photo_review_point: 'photo_review_point',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  level: 'level',
  english_name: 'english_name'
};

exports.Prisma.Member_grade_activityScalarFieldEnum = {
  activity_id: 'activity_id',
  member_id: 'member_id',
  total_purchase_amount: 'total_purchase_amount',
  order_lines: 'order_lines',
  feeds: 'feeds',
  comments: 'comments',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Member_grade_graphScalarFieldEnum = {
  member_grade_graph_id: 'member_grade_graph_id',
  grade: 'grade',
  grade_condition: 'grade_condition',
  total_purchase_amount: 'total_purchase_amount',
  purchase_point_rate: 'purchase_point_rate',
  normal_review_point: 'normal_review_point',
  photo_review_point: 'photo_review_point',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  icon_url: 'icon_url',
  total_purchase_amount_condition: 'total_purchase_amount_condition',
  grade_score_condition: 'grade_score_condition'
};

exports.Prisma.Member_notification_settingScalarFieldEnum = {
  notification_setting_id: 'notification_setting_id',
  is_allowed_member: 'is_allowed_member',
  is_allowed_creator: 'is_allowed_creator',
  is_allowed_interest: 'is_allowed_interest',
  is_allowed_shipment: 'is_allowed_shipment',
  is_allowed_order: 'is_allowed_order',
  is_allowed_purchase: 'is_allowed_purchase',
  is_allowed_review: 'is_allowed_review',
  is_allowed_brand: 'is_allowed_brand',
  is_allowed_event: 'is_allowed_event',
  is_allowed_information: 'is_allowed_information',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted',
  member_id: 'member_id',
  is_allowed_sms: 'is_allowed_sms',
  is_allowed_email: 'is_allowed_email',
  is_allowed_ad: 'is_allowed_ad'
};

exports.Prisma.Member_profile_viewsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  member_id: 'member_id',
  viewed_member_id: 'viewed_member_id'
};

exports.Prisma.Member_shippingScalarFieldEnum = {
  member_shipping_id: 'member_shipping_id',
  member_id: 'member_id',
  road_address: 'road_address',
  detail_address: 'detail_address',
  recipient_phone_number: 'recipient_phone_number',
  shipping_title: 'shipping_title',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_default: 'is_default',
  recipient_name: 'recipient_name'
};

exports.Prisma.Member_stylesScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  style_id: 'style_id',
  style_title: 'style_title',
  member_user_id: 'member_user_id',
  active: 'active'
};

exports.Prisma.Member_unregister_logScalarFieldEnum = {
  member_unregister_log_id: 'member_unregister_log_id',
  member_id: 'member_id',
  phone_number: 'phone_number',
  email: 'email',
  reason: 'reason',
  detail_reason: 'detail_reason',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted'
};

exports.Prisma.Member_userScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  account: 'account',
  activation: 'activation',
  agree_to_ad: 'agree_to_ad',
  agree_to_email: 'agree_to_email',
  agree_to_service: 'agree_to_service',
  agree_to_sms: 'agree_to_sms',
  birth: 'birth',
  birth_layer: 'birth_layer',
  body_type: 'body_type',
  bottom: 'bottom',
  chest: 'chest',
  email: 'email',
  gender: 'gender',
  height: 'height',
  hip: 'hip',
  image_origin_file_name: 'image_origin_file_name',
  image_server_file_name: 'image_server_file_name',
  image_url: 'image_url',
  intro: 'intro',
  join_type: 'join_type',
  name: 'name',
  nickname: 'nickname',
  password: 'password',
  phone_number: 'phone_number',
  push_token: 'push_token',
  role: 'role',
  shoulder: 'shoulder',
  top: 'top',
  waist: 'waist',
  weight: 'weight',
  grade: 'grade',
  point: 'point',
  grade_score: 'grade_score',
  total_purchase_amount: 'total_purchase_amount',
  age: 'age',
  favorite_fit: 'favorite_fit',
  unregister_request_at: 'unregister_request_at',
  leave_request_at: 'leave_request_at',
  custom_waist: 'custom_waist',
  reward: 'reward',
  grade_level: 'grade_level',
  reason_for_account_block: 'reason_for_account_block',
  reason_for_account_restore: 'reason_for_account_restore',
  account_blocked_by: 'account_blocked_by',
  account_restored_by: 'account_restored_by'
};

exports.Prisma.Merch_body_shapeScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  body_type: 'body_type',
  type: 'type',
  merchandise_id: 'merchandise_id'
};

exports.Prisma.Merch_brandScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  approved_at: 'approved_at',
  denied_at: 'denied_at',
  cancel_contract_at: 'cancel_contract_at',
  activation: 'activation',
  honor_brand: 'honor_brand',
  brand_code: 'brand_code',
  brand_style: 'brand_style',
  image_origin_file_name: 'image_origin_file_name',
  image_server_file_name: 'image_server_file_name',
  image_url: 'image_url',
  title: 'title',
  title_kor: 'title_kor',
  company_name_ceo: 'company_name_ceo',
  business_number: 'business_number',
  online_sales_registration: 'online_sales_registration',
  contact_number: 'contact_number',
  email: 'email',
  website: 'website',
  business_location: 'business_location',
  created_by: 'created_by',
  grade: 'grade',
  contract_period: 'contract_period',
  brand_type: 'brand_type',
  monthly_sales_amount: 'monthly_sales_amount',
  monthly_sales_count: 'monthly_sales_count',
  default_in_charge_of_as: 'default_in_charge_of_as',
  default_origin: 'default_origin',
  default_laundry_guide: 'default_laundry_guide',
  default_warranty: 'default_warranty',
  business_bank_account_number: 'business_bank_account_number',
  business_bank_internal_code: 'business_bank_internal_code',
  heart_count: 'heart_count',
  story_image_url: 'story_image_url',
  line_up_image_url: 'line_up_image_url',
  event_image_url: 'event_image_url',
  random_code: 'random_code',
  short_description: 'short_description',
  company_name_inhouse: 'company_name_inhouse',
  email_inhouse: 'email_inhouse',
  contact_number_inhouse: 'contact_number_inhouse',
  business_location_inhouse: 'business_location_inhouse',
  ceo_name: 'ceo_name',
  account_username: 'account_username',
  account_password: 'account_password',
  reset_time: 'reset_time',
  reset_random_code: 'reset_random_code'
};

exports.Prisma.Merch_cartScalarFieldEnum = {
  cart_id: 'cart_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted',
  is_purchased: 'is_purchased',
  quantity: 'quantity',
  color_option_id: 'color_option_id',
  member_user_id: 'member_user_id',
  merchandise_id: 'merchandise_id',
  size_option_id: 'size_option_id',
  creator_id: 'creator_id',
  feed_id: 'feed_id',
  order_id: 'order_id'
};

exports.Prisma.Merch_categoryScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  activation: 'activation',
  category_code: 'category_code',
  image_origin_file_name: 'image_origin_file_name',
  image_server_file_name: 'image_server_file_name',
  image_url: 'image_url',
  parent_first: 'parent_first',
  parent_second: 'parent_second',
  sorting: 'sorting',
  title: 'title',
  category_group: 'category_group',
  top_or_bottom: 'top_or_bottom',
  fit_view_flag: 'fit_view_flag'
};

exports.Prisma.Merch_clothing_analysisScalarFieldEnum = {
  analysis_id: 'analysis_id',
  merchandise_id: 'merchandise_id',
  merch_option_id: 'merch_option_id',
  category: 'category',
  detail_category: 'detail_category',
  original_category: 'original_category',
  original_detail_category: 'original_detail_category',
  option_value: 'option_value',
  comparing_result: 'comparing_result',
  image_url: 'image_url',
  fit: 'fit',
  color: 'color',
  length: 'length',
  print: 'print',
  material: 'material',
  style: 'style',
  neckline: 'neckline',
  sleeve: 'sleeve',
  silhouette: 'silhouette',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Merch_filesScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  image_origin_file_name: 'image_origin_file_name',
  image_server_file_name: 'image_server_file_name',
  image_url: 'image_url',
  width: 'width',
  height: 'height',
  merchandise_id: 'merchandise_id',
  merchandise_option_id: 'merchandise_option_id',
  sorting: 'sorting',
  is_deleted: 'is_deleted'
};

exports.Prisma.Merch_files_multi_uploadScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  image_origin_file_name: 'image_origin_file_name',
  image_server_file_name: 'image_server_file_name',
  image_url: 'image_url',
  merchandise_id: 'merchandise_id',
  merchandise_option_id: 'merchandise_option_id',
  sorting: 'sorting',
  new_merchandise_option_id: 'new_merchandise_option_id'
};

exports.Prisma.Merch_heartScalarFieldEnum = {
  merch_heart_id: 'merch_heart_id',
  merchandise_id: 'merchandise_id',
  member_id: 'member_id',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Merch_informationScalarFieldEnum = {
  merch_information_id: 'merch_information_id',
  as_responsible: 'as_responsible',
  care_instructions: 'care_instructions',
  country_of_manufacture: 'country_of_manufacture',
  guarantee_standard: 'guarantee_standard',
  manufacturer: 'manufacturer',
  manufacturing_date: 'manufacturing_date',
  product_number: 'product_number',
  store_product_number: 'store_product_number',
  merchandise_id: 'merchandise_id',
  fabric: 'fabric',
  stretch: 'stretch',
  thickness: 'thickness',
  sheerness: 'sheerness',
  lining: 'lining',
  fabric_additional_info: 'fabric_additional_info',
  created_at: 'created_at',
  updated_at: 'updated_at',
  description: 'description',
  is_deleted: 'is_deleted'
};

exports.Prisma.Merch_information_multi_uploadScalarFieldEnum = {
  merch_information_id: 'merch_information_id',
  as_responsible: 'as_responsible',
  care_instructions: 'care_instructions',
  country_of_manufacture: 'country_of_manufacture',
  guarantee_standard: 'guarantee_standard',
  manufacturer: 'manufacturer',
  manufacturing_date: 'manufacturing_date',
  product_number: 'product_number',
  merchandise_id: 'merchandise_id',
  fabric: 'fabric',
  created_at: 'created_at',
  updated_at: 'updated_at',
  description: 'description'
};

exports.Prisma.Merch_laundryScalarFieldEnum = {
  laundry_id: 'laundry_id',
  merchandise_id: 'merchandise_id',
  title: 'title',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Merch_optionScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  shoulder_size: 'shoulder_size',
  chest_size: 'chest_size',
  waist_size: 'waist_size',
  hip_size: 'hip_size',
  thigh_size: 'thigh_size',
  tailedge_size: 'tailedge_size',
  crotch_size: 'crotch_size',
  sleevelength_size: 'sleevelength_size',
  length_size: 'length_size',
  length_size_bottom: 'length_size_bottom',
  image_url: 'image_url',
  color_chip_code: 'color_chip_code',
  is_deleted: 'is_deleted',
  option_type: 'option_type',
  quantity: 'quantity',
  sort_order: 'sort_order',
  value: 'value',
  merchandise_id: 'merchandise_id',
  parent_option_id: 'parent_option_id',
  store_price: 'store_price',
  regular_price: 'regular_price',
  price: 'price',
  weight: 'weight',
  is_sales: 'is_sales',
  length_top: 'length_top',
  length_bottom: 'length_bottom'
};

exports.Prisma.Merch_option_backup_04172025ScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  shoulder_size: 'shoulder_size',
  chest_size: 'chest_size',
  waist_size: 'waist_size',
  hip_size: 'hip_size',
  thigh_size: 'thigh_size',
  tailedge_size: 'tailedge_size',
  crotch_size: 'crotch_size',
  sleevelength_size: 'sleevelength_size',
  length_size: 'length_size',
  length_size_bottom: 'length_size_bottom',
  image_url: 'image_url',
  color_chip_code: 'color_chip_code',
  is_deleted: 'is_deleted',
  option_type: 'option_type',
  quantity: 'quantity',
  sort_order: 'sort_order',
  value: 'value',
  merchandise_id: 'merchandise_id',
  parent_option_id: 'parent_option_id',
  regular_price: 'regular_price',
  price: 'price',
  weight: 'weight',
  is_sales: 'is_sales',
  length_top: 'length_top',
  length_bottom: 'length_bottom'
};

exports.Prisma.Merch_option_multi_uploadScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  shoulder_size: 'shoulder_size',
  chest_size: 'chest_size',
  waist_size: 'waist_size',
  hip_size: 'hip_size',
  thigh_size: 'thigh_size',
  tailedge_size: 'tailedge_size',
  crotch_size: 'crotch_size',
  sleevelength_size: 'sleevelength_size',
  length_size: 'length_size',
  image_url: 'image_url',
  is_deleted: 'is_deleted',
  option_type: 'option_type',
  quantity: 'quantity',
  sort_order: 'sort_order',
  value: 'value',
  merchandise_id: 'merchandise_id',
  parent_option_id: 'parent_option_id',
  color_chip_code: 'color_chip_code',
  regular_price: 'regular_price',
  price: 'price',
  weight: 'weight',
  is_sales: 'is_sales',
  new_merch_option_id: 'new_merch_option_id'
};

exports.Prisma.Merch_option_testScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  shoulder_size: 'shoulder_size',
  chest_size: 'chest_size',
  waist_size: 'waist_size',
  hip_size: 'hip_size',
  thigh_size: 'thigh_size',
  tailedge_size: 'tailedge_size',
  crotch_size: 'crotch_size',
  sleevelength_size: 'sleevelength_size',
  length_size: 'length_size',
  length_size_bottom: 'length_size_bottom',
  image_url: 'image_url',
  color_chip_code: 'color_chip_code',
  is_deleted: 'is_deleted',
  option_type: 'option_type',
  quantity: 'quantity',
  sort_order: 'sort_order',
  value: 'value',
  merchandise_id: 'merchandise_id',
  parent_option_id: 'parent_option_id',
  regular_price: 'regular_price',
  price: 'price',
  weight: 'weight',
  is_sales: 'is_sales',
  length_top: 'length_top',
  length_bottom: 'length_bottom'
};

exports.Prisma.Merch_orderScalarFieldEnum = {
  order_id: 'order_id',
  order_number: 'order_number',
  order_payment_id: 'order_payment_id',
  orderer_id: 'orderer_id',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  order_price: 'order_price',
  used_point: 'used_point',
  orderer_name: 'orderer_name',
  orderer_email: 'orderer_email',
  orderer_phone_number: 'orderer_phone_number',
  is_point_only: 'is_point_only'
};

exports.Prisma.Merch_reviewScalarFieldEnum = {
  review_id: 'review_id',
  reviewer_id: 'reviewer_id',
  merchandise_id: 'merchandise_id',
  order_map_merchandise_id: 'order_map_merchandise_id',
  detail_review: 'detail_review',
  rate: 'rate',
  size_review: 'size_review',
  design_review: 'design_review',
  color_review: 'color_review',
  shipment_review: 'shipment_review',
  has_photo: 'has_photo',
  helpful_count: 'helpful_count',
  like_count: 'like_count',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Merch_review_helpfulScalarFieldEnum = {
  review_helpful_id: 'review_helpful_id',
  review_id: 'review_id',
  reviewer_id: 'reviewer_id',
  helped_member_id: 'helped_member_id',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Merch_review_imageScalarFieldEnum = {
  review_image_id: 'review_image_id',
  review_id: 'review_id',
  reviewer_id: 'reviewer_id',
  image_url: 'image_url',
  image_cdn_url: 'image_cdn_url',
  original_file_name: 'original_file_name',
  server_file_name: 'server_file_name',
  file_size: 'file_size',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Merch_review_likeScalarFieldEnum = {
  review_like_id: 'review_like_id',
  review_id: 'review_id',
  reviewer_id: 'reviewer_id',
  liked_member_id: 'liked_member_id',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Merch_searchScalarFieldEnum = {
  search_id: 'search_id',
  keyword: 'keyword',
  merchandise_id: 'merchandise_id',
  created_by: 'created_by',
  search_count: 'search_count',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Merch_storeScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  member_user_id: 'member_user_id',
  merchandise_id: 'merchandise_id',
  is_deleted: 'is_deleted'
};

exports.Prisma.MerchandiseScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  activation: 'activation',
  store_price: 'store_price',
  cost: 'cost',
  discount: 'discount',
  multiupload_activation: 'multiupload_activation',
  image_origin_file_name: 'image_origin_file_name',
  image_server_file_name: 'image_server_file_name',
  image_url: 'image_url',
  details_common_margin: 'details_common_margin',
  link: 'link',
  price: 'price',
  title: 'title',
  title_store: 'title_store',
  merch_brand_id: 'merch_brand_id',
  merch_category_id: 'merch_category_id',
  short_description: 'short_description',
  memo: 'memo',
  order_count: 'order_count',
  view_count: 'view_count',
  like_count: 'like_count',
  is_sold_out: 'is_sold_out',
  heart_count: 'heart_count'
};

exports.Prisma.Merchandise_details_cardScalarFieldEnum = {
  details_card_id: 'details_card_id',
  merchandise_id: 'merchandise_id',
  card_type: 'card_type',
  details_text: 'details_text',
  details_image_fullurl: 'details_image_fullurl',
  margin_top: 'margin_top',
  alignment: 'alignment',
  size: 'size',
  text_bold: 'text_bold',
  text_underline: 'text_underline',
  text_color_code: 'text_color_code',
  random_code: 'random_code',
  sorting: 'sorting',
  updated_at: 'updated_at',
  created_at: 'created_at'
};

exports.Prisma.Merchandise_details_image_urlScalarFieldEnum = {
  details_code_id: 'details_code_id',
  merchandise_id: 'merchandise_id',
  details_image_fullurl: 'details_image_fullurl',
  updated_at: 'updated_at',
  created_at: 'created_at',
  sorting: 'sorting'
};

exports.Prisma.Merchandise_multi_uploadScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  activation: 'activation',
  cost: 'cost',
  discount: 'discount',
  multiupload_activation: 'multiupload_activation',
  image_origin_file_name: 'image_origin_file_name',
  image_server_file_name: 'image_server_file_name',
  image_url: 'image_url',
  link: 'link',
  price: 'price',
  title: 'title',
  merch_brand_id: 'merch_brand_id',
  merch_category_id: 'merch_category_id',
  short_description: 'short_description',
  memo: 'memo',
  new_merchandise_id: 'new_merchandise_id'
};

exports.Prisma.Merchandise_tagScalarFieldEnum = {
  tag_id: 'tag_id',
  product_id: 'product_id',
  category: 'category',
  fsmh_category: 'fsmh_category',
  color: 'color',
  detail: 'detail',
  image_url: 'image_url',
  fit: 'fit',
  item: 'item',
  length: 'length',
  look: 'look',
  neck_line: 'neck_line',
  print: 'print',
  shape: 'shape',
  sleeve_length: 'sleeve_length',
  texture: 'texture',
  merch_option_id: 'merch_option_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted',
  merchandise_id: 'merchandise_id',
  collar_shape: 'collar_shape',
  shoulder_shape: 'shoulder_shape',
  random_code: 'random_code'
};

exports.Prisma.Merchandise_tag_multi_uploadScalarFieldEnum = {
  tag_id: 'tag_id',
  product_id: 'product_id',
  category: 'category',
  fsmh_category: 'fsmh_category',
  color: 'color',
  detail: 'detail',
  image_url: 'image_url',
  fit: 'fit',
  item: 'item',
  length: 'length',
  look: 'look',
  neck_line: 'neck_line',
  print: 'print',
  shape: 'shape',
  sleeve_length: 'sleeve_length',
  texture: 'texture',
  merch_option_id: 'merch_option_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted',
  merchandise_id: 'merchandise_id',
  collar_shape: 'collar_shape',
  shoulder_shape: 'shoulder_shape',
  random_code: 'random_code'
};

exports.Prisma.NoticeScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  content: 'content',
  file_url: 'file_url',
  origin_file_name: 'origin_file_name',
  server_file_name: 'server_file_name',
  title: 'title'
};

exports.Prisma.Order_cancelScalarFieldEnum = {
  order_cancel_id: 'order_cancel_id',
  order_id: 'order_id',
  member_id: 'member_id',
  order_cancel_type: 'order_cancel_type',
  cancel_reason: 'cancel_reason',
  cancel_solve_type: 'cancel_solve_type',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  refund_price: 'refund_price',
  recall_address: 'recall_address',
  recall_request: 'recall_request',
  cancel_detail_reason: 'cancel_detail_reason',
  order_map_merchandise_id: 'order_map_merchandise_id',
  hq_status: 'hq_status',
  sent_email_notification_flag: 'sent_email_notification_flag'
};

exports.Prisma.Order_cancel_imageScalarFieldEnum = {
  order_cancel_image_id: 'order_cancel_image_id',
  image_url: 'image_url',
  image_cdn_url: 'image_cdn_url',
  original_file_name: 'original_file_name',
  server_file_name: 'server_file_name',
  file_size: 'file_size',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  order_cancel_id: 'order_cancel_id'
};

exports.Prisma.Order_cancel_memoScalarFieldEnum = {
  id: 'id',
  order_cancel_id: 'order_cancel_id',
  memo: 'memo',
  created_at: 'created_at',
  created_by: 'created_by'
};

exports.Prisma.Order_line_creatorScalarFieldEnum = {
  order_line_creator_id: 'order_line_creator_id',
  merchandise_id: 'merchandise_id',
  order_map_merchandise_id: 'order_map_merchandise_id',
  amount: 'amount',
  orderer_id: 'orderer_id',
  creator_id: 'creator_id',
  reward_grade_at: 'reward_grade_at',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  brand_id: 'brand_id'
};

exports.Prisma.Order_map_merchandiseScalarFieldEnum = {
  order_map_merchandise_id: 'order_map_merchandise_id',
  order_id: 'order_id',
  merchandise_id: 'merchandise_id',
  color_option_id: 'color_option_id',
  size_option_id: 'size_option_id',
  orderer_id: 'orderer_id',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  cancel_confirmed_at: 'cancel_confirmed_at',
  order_confirmed_at: 'order_confirmed_at',
  order_price: 'order_price',
  merchandise_price: 'merchandise_price',
  quantity: 'quantity',
  color_value: 'color_value',
  size_value: 'size_value',
  creator_id: 'creator_id',
  order_status: 'order_status',
  confirmed_at: 'confirmed_at',
  brand_id: 'brand_id',
  point_grade_at: 'point_grade_at',
  feed_id: 'feed_id',
  sent_email_notification_flag: 'sent_email_notification_flag',
  accounting_confirm: 'accounting_confirm',
  accounting_confirmed_at: 'accounting_confirmed_at',
  member_coupons_id: 'member_coupons_id',
  package_number: 'package_number',
  purchase_order_status: 'purchase_order_status'
};

exports.Prisma.PaymentScalarFieldEnum = {
  payment_id: 'payment_id',
  payer_id: 'payer_id',
  result_code: 'result_code',
  result_msg: 'result_msg',
  tid: 'tid',
  cancelled_tid: 'cancelled_tid',
  payment_status: 'payment_status',
  pay_method: 'pay_method',
  amount: 'amount',
  approve_no: 'approve_no',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  order_id: 'order_id',
  card_name: 'card_name',
  card_code: 'card_code',
  card_no: 'card_no',
  easy_pay: 'easy_pay',
  bank_code: 'bank_code',
  bank_name: 'bank_name',
  cancel_amount: 'cancel_amount',
  moid: 'moid'
};

exports.Prisma.Play_gameScalarFieldEnum = {
  id: 'id',
  title: 'title',
  code: 'code',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Play_level_rewardsScalarFieldEnum = {
  id: 'id',
  reward_type: 'reward_type',
  coupon_id: 'coupon_id',
  point: 'point',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  level: 'level',
  round: 'round'
};

exports.Prisma.Play_member_gamesScalarFieldEnum = {
  id: 'id',
  member_id: 'member_id',
  game_id: 'game_id',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  score: 'score'
};

exports.Prisma.Play_member_level_recordsScalarFieldEnum = {
  id: 'id',
  member_id: 'member_id',
  cleared_at: 'cleared_at',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  show_animation: 'show_animation',
  round: 'round',
  level: 'level'
};

exports.Prisma.Play_member_level_reward_historyScalarFieldEnum = {
  id: 'id',
  member_id: 'member_id',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  level_reward_id: 'level_reward_id'
};

exports.Prisma.Play_member_round_recordsScalarFieldEnum = {
  id: 'id',
  member_id: 'member_id',
  cleared_at: 'cleared_at',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  round: 'round'
};

exports.Prisma.Play_member_round_reward_historyScalarFieldEnum = {
  id: 'id',
  member_id: 'member_id',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  round_reward_id: 'round_reward_id'
};

exports.Prisma.Play_play_gamesScalarFieldEnum = {
  id: 'id',
  round: 'round',
  level: 'level',
  game_id: 'game_id',
  score: 'score',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Play_roundScalarFieldEnum = {
  id: 'id',
  title: 'title',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  round: 'round'
};

exports.Prisma.Play_round_levelsScalarFieldEnum = {
  id: 'id',
  round: 'round',
  level: 'level',
  title: 'title',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Play_round_rewardsScalarFieldEnum = {
  id: 'id',
  reward_type: 'reward_type',
  coupon_id: 'coupon_id',
  point: 'point',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  round: 'round'
};

exports.Prisma.Point_historyScalarFieldEnum = {
  point_history_id: 'point_history_id',
  member_id: 'member_id',
  point: 'point',
  type: 'type',
  detail_content: 'detail_content',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  action: 'action',
  order_id: 'order_id'
};

exports.Prisma.PolicyScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  content: 'content',
  policy_category: 'policy_category',
  title: 'title',
  type: 'type'
};

exports.Prisma.PopupScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  activation: 'activation',
  end_date: 'end_date',
  image_origin_file_name: 'image_origin_file_name',
  image_server_file_name: 'image_server_file_name',
  image_url: 'image_url',
  link: 'link',
  start_date: 'start_date',
  title: 'title'
};

exports.Prisma.Profile_heartScalarFieldEnum = {
  heart_id: 'heart_id',
  profile_id: 'profile_id',
  member_id: 'member_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Profile_map_stickersScalarFieldEnum = {
  map_id: 'map_id',
  profile_id: 'profile_id',
  sticker_id: 'sticker_id',
  member_id: 'member_id',
  width: 'width',
  height: 'height',
  x: 'x',
  y: 'y',
  rotation: 'rotation',
  scale: 'scale',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted'
};

exports.Prisma.Profile_stickersScalarFieldEnum = {
  profile_sticker_id: 'profile_sticker_id',
  profile_id: 'profile_id',
  sticker_id: 'sticker_id',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ReportScalarFieldEnum = {
  report_id: 'report_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  additional_message: 'additional_message',
  content_id: 'content_id',
  content_type: 'content_type',
  is_deleted: 'is_deleted',
  reported_member_id: 'reported_member_id',
  status: 'status',
  report_type: 'report_type',
  reporter_member_id: 'reporter_member_id',
  report_status: 'report_status',
  answer: 'answer'
};

exports.Prisma.Reward_historyScalarFieldEnum = {
  reward_history_id: 'reward_history_id',
  creator_id: 'creator_id',
  order_map_merchandise_id: 'order_map_merchandise_id',
  merchandise_amount: 'merchandise_amount',
  reward: 'reward',
  charge: 'charge',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  charge_explanation: 'charge_explanation'
};

exports.Prisma.Rolling_paperScalarFieldEnum = {
  paper_id: 'paper_id',
  from_member_id: 'from_member_id',
  to_member_id: 'to_member_id',
  content: 'content',
  is_private: 'is_private',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Search_keywordScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  keyword: 'keyword',
  keyword_category: 'keyword_category',
  keyword_string: 'keyword_string'
};

exports.Prisma.ShipmentScalarFieldEnum = {
  shipment_id: 'shipment_id',
  order_id: 'order_id',
  road_address: 'road_address',
  detail_address: 'detail_address',
  recipient_name: 'recipient_name',
  recipient_phone_number: 'recipient_phone_number',
  shipping_request: 'shipping_request',
  courier_company: 'courier_company',
  tracking_number: 'tracking_number',
  shipping_status_hq_only: 'shipping_status_hq_only',
  shipping_status: 'shipping_status',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  order_map_merchandise_id: 'order_map_merchandise_id',
  courier_company_id: 'courier_company_id',
  orderer_id: 'orderer_id',
  order_confirmed_at: 'order_confirmed_at',
  in_transit_at: 'in_transit_at',
  delivered_at: 'delivered_at',
  delivery_notification_send_at: 'delivery_notification_send_at'
};

exports.Prisma.Size_storyScalarFieldEnum = {
  story_id: 'story_id',
  follower_id: 'follower_id',
  following_id: 'following_id',
  total_score: 'total_score',
  height_score: 'height_score',
  weight_score: 'weight_score',
  shoulder_score: 'shoulder_score',
  chest_score: 'chest_score',
  waist_score: 'waist_score',
  hip_score: 'hip_score',
  scored_at: 'scored_at',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Sms_verificationScalarFieldEnum = {
  sms_verification_id: 'sms_verification_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  expired_time: 'expired_time',
  is_deleted: 'is_deleted',
  number_code: 'number_code',
  phone_number: 'phone_number',
  verification_code: 'verification_code'
};

exports.Prisma.Sound_source_logScalarFieldEnum = {
  log_id: 'log_id',
  song_id: 'song_id',
  title: 'title',
  album: 'album',
  artist: 'artist',
  service_type: 'service_type',
  feed_file_id: 'feed_file_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  feed_id: 'feed_id',
  upload_year_month: 'upload_year_month',
  is_success: 'is_success',
  fail_log: 'fail_log',
  feed_uploader_id: 'feed_uploader_id'
};

exports.Prisma.StatisticsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  today: 'today',
  visitors: 'visitors'
};

exports.Prisma.StickerScalarFieldEnum = {
  sticker_id: 'sticker_id',
  image_url: 'image_url',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.StyleScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  image_origin_file_name: 'image_origin_file_name',
  image_server_file_name: 'image_server_file_name',
  image_url: 'image_url',
  title: 'title',
  sorting: 'sorting',
  active: 'active'
};

exports.Prisma.TermsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  content: 'content',
  title: 'title'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.alarmOrderByRelevanceFieldEnum = {
  content: 'content',
  category: 'category',
  is_read: 'is_read',
  link: 'link',
  detail_category: 'detail_category',
  image: 'image'
};

exports.Prisma.alarm_failedOrderByRelevanceFieldEnum = {
  content: 'content',
  category: 'category',
  is_read: 'is_read',
  link: 'link',
  detail_category: 'detail_category',
  image: 'image',
  error_message: 'error_message'
};

exports.Prisma.app_versionOrderByRelevanceFieldEnum = {
  android_latest_version: 'android_latest_version',
  ios_latest_version: 'ios_latest_version',
  release_notes: 'release_notes',
  ios_latest_mandatory_version: 'ios_latest_mandatory_version',
  android_latest_mandatory_version: 'android_latest_mandatory_version'
};

exports.Prisma.askOrderByRelevanceFieldEnum = {
  answer: 'answer',
  question: 'question'
};

exports.Prisma.banner_brand_homeOrderByRelevanceFieldEnum = {
  brand_home_directory_original: 'brand_home_directory_original',
  brand_home_filename_original: 'brand_home_filename_original',
  brand_home_fullurl_original: 'brand_home_fullurl_original',
  brand_home_directory_resized: 'brand_home_directory_resized',
  brand_home_filename_resized: 'brand_home_filename_resized',
  brand_home_fullurl_resized: 'brand_home_fullurl_resized',
  btype: 'btype'
};

exports.Prisma.banner_brand_listOrderByRelevanceFieldEnum = {
  brand_list_directory_original: 'brand_list_directory_original',
  brand_list_filename_original: 'brand_list_filename_original',
  brand_list_fullurl_original: 'brand_list_fullurl_original',
  brand_list_directory_resized: 'brand_list_directory_resized',
  brand_list_filename_resized: 'brand_list_filename_resized',
  brand_list_fullurl_resized: 'brand_list_fullurl_resized'
};

exports.Prisma.banner_brand_storyOrderByRelevanceFieldEnum = {
  brand_story_directory_original: 'brand_story_directory_original',
  brand_story_filename_original: 'brand_story_filename_original',
  brand_story_fullurl_original: 'brand_story_fullurl_original',
  brand_story_directory_resized: 'brand_story_directory_resized',
  brand_story_filename_resized: 'brand_story_filename_resized',
  brand_story_fullurl_resized: 'brand_story_fullurl_resized'
};

exports.Prisma.banner_brand_thumbnailOrderByRelevanceFieldEnum = {
  brand_thumbnail_directory_original: 'brand_thumbnail_directory_original',
  brand_thumbnail_filename_original: 'brand_thumbnail_filename_original',
  brand_thumbnail_fullurl_original: 'brand_thumbnail_fullurl_original',
  brand_thumbnail_directory_resized: 'brand_thumbnail_directory_resized',
  brand_thumbnail_filename_resized: 'brand_thumbnail_filename_resized',
  brand_thumbnail_fullurl_resized: 'brand_thumbnail_fullurl_resized'
};

exports.Prisma.banner_pick_brandOrderByRelevanceFieldEnum = {
  pick_brand_directory_original: 'pick_brand_directory_original',
  pick_brand_filename_original: 'pick_brand_filename_original',
  pick_brand_fullurl_original: 'pick_brand_fullurl_original',
  pick_brand_directory_resized: 'pick_brand_directory_resized',
  pick_brand_filename_resized: 'pick_brand_filename_resized',
  pick_brand_fullurl_resized: 'pick_brand_fullurl_resized'
};

exports.Prisma.base_infoOrderByRelevanceFieldEnum = {
  address: 'address',
  business_name: 'business_name',
  business_number: 'business_number',
  ceo: 'ceo',
  customer_service: 'customer_service',
  email: 'email',
  tell: 'tell',
  online_sales_number: 'online_sales_number'
};

exports.Prisma.body_shapeOrderByRelevanceFieldEnum = {
  creator_body_type: 'creator_body_type',
  match_rate: 'match_rate',
  member_body_type: 'member_body_type',
  print_text: 'print_text'
};

exports.Prisma.brand_adjustmentOrderByRelevanceFieldEnum = {
  sales_amount: 'sales_amount',
  adjust_amount: 'adjust_amount',
  charge_explanation: 'charge_explanation'
};

exports.Prisma.brand_admin_userOrderByRelevanceFieldEnum = {
  username: 'username',
  passwd: 'passwd',
  full_name: 'full_name',
  random_code: 'random_code'
};

exports.Prisma.brand_applicationOrderByRelevanceFieldEnum = {
  brand_style: 'brand_style',
  brand_name: 'brand_name',
  brand_website: 'brand_website',
  other_sales_channel: 'other_sales_channel',
  reference_url: 'reference_url',
  company_introduction: 'company_introduction',
  company_name: 'company_name',
  business_registration_number: 'business_registration_number',
  company_address: 'company_address',
  number_of_sku: 'number_of_sku',
  parellel_import: 'parellel_import',
  wholesale: 'wholesale',
  name_person_in_charge: 'name_person_in_charge',
  phone_person_in_charge: 'phone_person_in_charge',
  cellphone: 'cellphone',
  email_address: 'email_address',
  agreeto_terms: 'agreeto_terms',
  agreeto_collecting: 'agreeto_collecting',
  agreeto_policy: 'agreeto_policy'
};

exports.Prisma.brand_eventOrderByRelevanceFieldEnum = {
  main_image_directory_original: 'main_image_directory_original',
  main_image_filename_original: 'main_image_filename_original',
  main_image_fullurl_original: 'main_image_fullurl_original',
  main_image_directory_resized: 'main_image_directory_resized',
  main_image_filename_resized: 'main_image_filename_resized',
  main_image_fullurl_resized: 'main_image_fullurl_resized',
  subject: 'subject',
  content: 'content',
  content_image_directory_original: 'content_image_directory_original',
  content_image_filename_original: 'content_image_filename_original',
  content_image_fullurl_original: 'content_image_fullurl_original',
  content_image_directory_resized: 'content_image_directory_resized',
  content_image_filename_resized: 'content_image_filename_resized',
  content_image_fullurl_resized: 'content_image_fullurl_resized'
};

exports.Prisma.brand_grade_graphOrderByRelevanceFieldEnum = {
  grade: 'grade',
  monthly_sales_amount: 'monthly_sales_amount',
  monthly_sales_count: 'monthly_sales_count',
  usage_fee: 'usage_fee',
  icon_url: 'icon_url',
  monthly_sales_amount_condition: 'monthly_sales_amount_condition'
};

exports.Prisma.brand_storyOrderByRelevanceFieldEnum = {
  subject: 'subject',
  content: 'content'
};

exports.Prisma.brand_story_imageOrderByRelevanceFieldEnum = {
  brand_story_directory_original: 'brand_story_directory_original',
  brand_story_filename_original: 'brand_story_filename_original',
  brand_story_fullurl_original: 'brand_story_fullurl_original',
  brand_story_directory_resized: 'brand_story_directory_resized',
  brand_story_filename_resized: 'brand_story_filename_resized',
  brand_story_fullurl_resized: 'brand_story_fullurl_resized'
};

exports.Prisma.color_chartOrderByRelevanceFieldEnum = {
  color_name_eng: 'color_name_eng',
  color_name: 'color_name',
  hex_code: 'hex_code'
};

exports.Prisma.commentOrderByRelevanceFieldEnum = {
  content: 'content',
  deleted_reason: 'deleted_reason'
};

exports.Prisma.couponOrderByRelevanceFieldEnum = {
  name: 'name',
  discount_type: 'discount_type',
  system_code: 'system_code',
  discount_amount: 'discount_amount',
  limit_discount_amount: 'limit_discount_amount'
};

exports.Prisma.coupon_descriptionsOrderByRelevanceFieldEnum = {
  description: 'description'
};

exports.Prisma.couriersOrderByRelevanceFieldEnum = {
  courier_name: 'courier_name',
  courier_code: 'courier_code'
};

exports.Prisma.diaryOrderByRelevanceFieldEnum = {
  title: 'title',
  content: 'content',
  written_date: 'written_date'
};

exports.Prisma.faeferhouse_profileOrderByRelevanceFieldEnum = {
  title: 'title',
  background_color: 'background_color',
  introduce: 'introduce'
};

exports.Prisma.faeferhouse_profile_fileOrderByRelevanceFieldEnum = {
  file_type: 'file_type',
  cdn_url: 'cdn_url',
  s3_url: 's3_url'
};

exports.Prisma.faq_categoryOrderByRelevanceFieldEnum = {
  title: 'title'
};

exports.Prisma.fashion_storyOrderByRelevanceFieldEnum = {
  title: 'title',
  content: 'content'
};

exports.Prisma.fashion_story_fileOrderByRelevanceFieldEnum = {
  file_type: 'file_type',
  s3_url: 's3_url',
  cdn_url: 'cdn_url'
};

exports.Prisma.fashion_story_itemOrderByRelevanceFieldEnum = {
  category: 'category',
  brand: 'brand',
  price: 'price',
  name: 'name'
};

exports.Prisma.feedOrderByRelevanceFieldEnum = {
  gender: 'gender',
  review: 'review',
  short_form_url: 'short_form_url',
  shotform_url: 'shotform_url',
  title: 'title',
  inactive_reason: 'inactive_reason'
};

exports.Prisma.feed_activityOrderByRelevanceFieldEnum = {
  activity: 'activity'
};

exports.Prisma.feed_clothing_analysisOrderByRelevanceFieldEnum = {
  category: 'category',
  fit: 'fit',
  color: 'color',
  length: 'length',
  print: 'print',
  material: 'material',
  style: 'style',
  neckline: 'neckline',
  sleeve: 'sleeve',
  detail_category: 'detail_category',
  silhouette: 'silhouette'
};

exports.Prisma.feed_filesOrderByRelevanceFieldEnum = {
  captured_resize_image_url: 'captured_resize_image_url',
  duration: 'duration',
  image_origin_file_name: 'image_origin_file_name',
  image_server_file_name: 'image_server_file_name',
  image_url: 'image_url',
  thumbnail_url: 'thumbnail_url',
  s3_key: 's3_key',
  omnious_key: 'omnious_key'
};

exports.Prisma.feed_merchsOrderByRelevanceFieldEnum = {
  etc: 'etc'
};

exports.Prisma.feed_placeOrderByRelevanceFieldEnum = {
  place: 'place'
};

exports.Prisma.feed_searchOrderByRelevanceFieldEnum = {
  keyword: 'keyword'
};

exports.Prisma.feed_seasonOrderByRelevanceFieldEnum = {
  season: 'season'
};

exports.Prisma.fsmh_eventOrderByRelevanceFieldEnum = {
  content: 'content',
  title: 'title'
};

exports.Prisma.main_ad_sentenceOrderByRelevanceFieldEnum = {
  sentence: 'sentence'
};

exports.Prisma.member_access_logOrderByRelevanceFieldEnum = {
  ip: 'ip',
  device: 'device'
};

exports.Prisma.member_accountOrderByRelevanceFieldEnum = {
  bank: 'bank',
  account_number: 'account_number',
  account_holder: 'account_holder'
};

exports.Prisma.member_couponsOrderByRelevanceFieldEnum = {
  phone_number: 'phone_number'
};

exports.Prisma.member_gradeOrderByRelevanceFieldEnum = {
  name: 'name',
  total_purchase_amount_condition: 'total_purchase_amount_condition',
  normal_review_point: 'normal_review_point',
  photo_review_point: 'photo_review_point',
  english_name: 'english_name'
};

exports.Prisma.member_grade_activityOrderByRelevanceFieldEnum = {
  total_purchase_amount: 'total_purchase_amount'
};

exports.Prisma.member_grade_graphOrderByRelevanceFieldEnum = {
  grade: 'grade',
  grade_condition: 'grade_condition',
  total_purchase_amount: 'total_purchase_amount',
  normal_review_point: 'normal_review_point',
  photo_review_point: 'photo_review_point',
  icon_url: 'icon_url',
  total_purchase_amount_condition: 'total_purchase_amount_condition',
  grade_score_condition: 'grade_score_condition'
};

exports.Prisma.member_notification_settingOrderByRelevanceFieldEnum = {
  is_allowed_member: 'is_allowed_member',
  is_allowed_creator: 'is_allowed_creator',
  is_allowed_interest: 'is_allowed_interest',
  is_allowed_shipment: 'is_allowed_shipment',
  is_allowed_order: 'is_allowed_order',
  is_allowed_purchase: 'is_allowed_purchase',
  is_allowed_review: 'is_allowed_review',
  is_allowed_brand: 'is_allowed_brand',
  is_allowed_event: 'is_allowed_event',
  is_allowed_information: 'is_allowed_information',
  is_allowed_sms: 'is_allowed_sms',
  is_allowed_email: 'is_allowed_email',
  is_allowed_ad: 'is_allowed_ad'
};

exports.Prisma.member_shippingOrderByRelevanceFieldEnum = {
  road_address: 'road_address',
  detail_address: 'detail_address',
  recipient_phone_number: 'recipient_phone_number',
  shipping_title: 'shipping_title',
  recipient_name: 'recipient_name'
};

exports.Prisma.member_stylesOrderByRelevanceFieldEnum = {
  style_title: 'style_title'
};

exports.Prisma.member_unregister_logOrderByRelevanceFieldEnum = {
  phone_number: 'phone_number',
  email: 'email',
  reason: 'reason',
  detail_reason: 'detail_reason'
};

exports.Prisma.member_userOrderByRelevanceFieldEnum = {
  account: 'account',
  body_type: 'body_type',
  bottom: 'bottom',
  email: 'email',
  gender: 'gender',
  image_origin_file_name: 'image_origin_file_name',
  image_server_file_name: 'image_server_file_name',
  image_url: 'image_url',
  intro: 'intro',
  join_type: 'join_type',
  name: 'name',
  nickname: 'nickname',
  password: 'password',
  phone_number: 'phone_number',
  push_token: 'push_token',
  role: 'role',
  top: 'top',
  grade: 'grade',
  point: 'point',
  grade_score: 'grade_score',
  total_purchase_amount: 'total_purchase_amount',
  age: 'age',
  favorite_fit: 'favorite_fit',
  reward: 'reward',
  reason_for_account_block: 'reason_for_account_block',
  reason_for_account_restore: 'reason_for_account_restore'
};

exports.Prisma.merch_body_shapeOrderByRelevanceFieldEnum = {
  body_type: 'body_type'
};

exports.Prisma.merch_brandOrderByRelevanceFieldEnum = {
  brand_code: 'brand_code',
  brand_style: 'brand_style',
  image_origin_file_name: 'image_origin_file_name',
  image_server_file_name: 'image_server_file_name',
  image_url: 'image_url',
  title: 'title',
  title_kor: 'title_kor',
  company_name_ceo: 'company_name_ceo',
  business_number: 'business_number',
  online_sales_registration: 'online_sales_registration',
  contact_number: 'contact_number',
  email: 'email',
  website: 'website',
  business_location: 'business_location',
  grade: 'grade',
  contract_period: 'contract_period',
  monthly_sales_amount: 'monthly_sales_amount',
  default_in_charge_of_as: 'default_in_charge_of_as',
  default_origin: 'default_origin',
  default_laundry_guide: 'default_laundry_guide',
  default_warranty: 'default_warranty',
  business_bank_account_number: 'business_bank_account_number',
  business_bank_internal_code: 'business_bank_internal_code',
  story_image_url: 'story_image_url',
  line_up_image_url: 'line_up_image_url',
  event_image_url: 'event_image_url',
  random_code: 'random_code',
  short_description: 'short_description',
  company_name_inhouse: 'company_name_inhouse',
  email_inhouse: 'email_inhouse',
  contact_number_inhouse: 'contact_number_inhouse',
  business_location_inhouse: 'business_location_inhouse',
  ceo_name: 'ceo_name',
  account_username: 'account_username',
  account_password: 'account_password',
  reset_random_code: 'reset_random_code'
};

exports.Prisma.merch_categoryOrderByRelevanceFieldEnum = {
  category_code: 'category_code',
  image_origin_file_name: 'image_origin_file_name',
  image_server_file_name: 'image_server_file_name',
  image_url: 'image_url',
  title: 'title',
  category_group: 'category_group'
};

exports.Prisma.merch_clothing_analysisOrderByRelevanceFieldEnum = {
  category: 'category',
  detail_category: 'detail_category',
  original_category: 'original_category',
  original_detail_category: 'original_detail_category',
  option_value: 'option_value',
  image_url: 'image_url',
  fit: 'fit',
  color: 'color',
  length: 'length',
  print: 'print',
  material: 'material',
  style: 'style',
  neckline: 'neckline',
  sleeve: 'sleeve',
  silhouette: 'silhouette'
};

exports.Prisma.merch_filesOrderByRelevanceFieldEnum = {
  image_origin_file_name: 'image_origin_file_name',
  image_server_file_name: 'image_server_file_name',
  image_url: 'image_url'
};

exports.Prisma.merch_files_multi_uploadOrderByRelevanceFieldEnum = {
  image_origin_file_name: 'image_origin_file_name',
  image_server_file_name: 'image_server_file_name',
  image_url: 'image_url'
};

exports.Prisma.merch_informationOrderByRelevanceFieldEnum = {
  as_responsible: 'as_responsible',
  care_instructions: 'care_instructions',
  country_of_manufacture: 'country_of_manufacture',
  guarantee_standard: 'guarantee_standard',
  manufacturer: 'manufacturer',
  manufacturing_date: 'manufacturing_date',
  product_number: 'product_number',
  store_product_number: 'store_product_number',
  fabric: 'fabric',
  stretch: 'stretch',
  thickness: 'thickness',
  sheerness: 'sheerness',
  lining: 'lining',
  fabric_additional_info: 'fabric_additional_info',
  created_at: 'created_at',
  updated_at: 'updated_at',
  description: 'description'
};

exports.Prisma.merch_information_multi_uploadOrderByRelevanceFieldEnum = {
  as_responsible: 'as_responsible',
  care_instructions: 'care_instructions',
  country_of_manufacture: 'country_of_manufacture',
  guarantee_standard: 'guarantee_standard',
  manufacturer: 'manufacturer',
  manufacturing_date: 'manufacturing_date',
  product_number: 'product_number',
  fabric: 'fabric',
  created_at: 'created_at',
  updated_at: 'updated_at',
  description: 'description'
};

exports.Prisma.merch_laundryOrderByRelevanceFieldEnum = {
  title: 'title'
};

exports.Prisma.merch_optionOrderByRelevanceFieldEnum = {
  image_url: 'image_url',
  color_chip_code: 'color_chip_code',
  option_type: 'option_type',
  value: 'value',
  store_price: 'store_price',
  price: 'price',
  weight: 'weight'
};

exports.Prisma.merch_option_backup_04172025OrderByRelevanceFieldEnum = {
  image_url: 'image_url',
  color_chip_code: 'color_chip_code',
  option_type: 'option_type',
  value: 'value',
  price: 'price',
  weight: 'weight'
};

exports.Prisma.merch_option_multi_uploadOrderByRelevanceFieldEnum = {
  image_url: 'image_url',
  option_type: 'option_type',
  value: 'value',
  color_chip_code: 'color_chip_code',
  price: 'price',
  weight: 'weight'
};

exports.Prisma.merch_option_testOrderByRelevanceFieldEnum = {
  image_url: 'image_url',
  color_chip_code: 'color_chip_code',
  option_type: 'option_type',
  value: 'value',
  price: 'price',
  weight: 'weight'
};

exports.Prisma.merch_orderOrderByRelevanceFieldEnum = {
  order_number: 'order_number',
  order_payment_id: 'order_payment_id',
  order_price: 'order_price',
  used_point: 'used_point',
  orderer_name: 'orderer_name',
  orderer_email: 'orderer_email',
  orderer_phone_number: 'orderer_phone_number'
};

exports.Prisma.merch_reviewOrderByRelevanceFieldEnum = {
  detail_review: 'detail_review',
  size_review: 'size_review',
  design_review: 'design_review',
  color_review: 'color_review',
  shipment_review: 'shipment_review',
  has_photo: 'has_photo'
};

exports.Prisma.merch_review_imageOrderByRelevanceFieldEnum = {
  image_url: 'image_url',
  image_cdn_url: 'image_cdn_url',
  original_file_name: 'original_file_name',
  server_file_name: 'server_file_name'
};

exports.Prisma.merch_searchOrderByRelevanceFieldEnum = {
  keyword: 'keyword'
};

exports.Prisma.merchandiseOrderByRelevanceFieldEnum = {
  store_price: 'store_price',
  cost: 'cost',
  image_origin_file_name: 'image_origin_file_name',
  image_server_file_name: 'image_server_file_name',
  image_url: 'image_url',
  link: 'link',
  price: 'price',
  title: 'title',
  title_store: 'title_store',
  short_description: 'short_description',
  memo: 'memo'
};

exports.Prisma.merchandise_details_cardOrderByRelevanceFieldEnum = {
  details_text: 'details_text',
  details_image_fullurl: 'details_image_fullurl',
  text_color_code: 'text_color_code',
  random_code: 'random_code'
};

exports.Prisma.merchandise_details_image_urlOrderByRelevanceFieldEnum = {
  details_image_fullurl: 'details_image_fullurl'
};

exports.Prisma.merchandise_multi_uploadOrderByRelevanceFieldEnum = {
  cost: 'cost',
  image_origin_file_name: 'image_origin_file_name',
  image_server_file_name: 'image_server_file_name',
  image_url: 'image_url',
  link: 'link',
  price: 'price',
  title: 'title',
  short_description: 'short_description',
  memo: 'memo'
};

exports.Prisma.merchandise_tagOrderByRelevanceFieldEnum = {
  product_id: 'product_id',
  category: 'category',
  fsmh_category: 'fsmh_category',
  color: 'color',
  detail: 'detail',
  image_url: 'image_url',
  fit: 'fit',
  item: 'item',
  length: 'length',
  look: 'look',
  neck_line: 'neck_line',
  print: 'print',
  shape: 'shape',
  sleeve_length: 'sleeve_length',
  texture: 'texture',
  collar_shape: 'collar_shape',
  shoulder_shape: 'shoulder_shape',
  random_code: 'random_code'
};

exports.Prisma.merchandise_tag_multi_uploadOrderByRelevanceFieldEnum = {
  product_id: 'product_id',
  category: 'category',
  fsmh_category: 'fsmh_category',
  color: 'color',
  detail: 'detail',
  image_url: 'image_url',
  fit: 'fit',
  item: 'item',
  length: 'length',
  look: 'look',
  neck_line: 'neck_line',
  print: 'print',
  shape: 'shape',
  sleeve_length: 'sleeve_length',
  texture: 'texture',
  collar_shape: 'collar_shape',
  shoulder_shape: 'shoulder_shape',
  random_code: 'random_code'
};

exports.Prisma.noticeOrderByRelevanceFieldEnum = {
  content: 'content',
  file_url: 'file_url',
  origin_file_name: 'origin_file_name',
  server_file_name: 'server_file_name',
  title: 'title'
};

exports.Prisma.order_cancelOrderByRelevanceFieldEnum = {
  order_cancel_type: 'order_cancel_type',
  cancel_reason: 'cancel_reason',
  cancel_solve_type: 'cancel_solve_type',
  refund_price: 'refund_price',
  recall_address: 'recall_address',
  recall_request: 'recall_request',
  cancel_detail_reason: 'cancel_detail_reason',
  hq_status: 'hq_status'
};

exports.Prisma.order_cancel_imageOrderByRelevanceFieldEnum = {
  image_url: 'image_url',
  image_cdn_url: 'image_cdn_url',
  original_file_name: 'original_file_name',
  server_file_name: 'server_file_name'
};

exports.Prisma.order_cancel_memoOrderByRelevanceFieldEnum = {
  memo: 'memo'
};

exports.Prisma.order_line_creatorOrderByRelevanceFieldEnum = {
  amount: 'amount'
};

exports.Prisma.order_map_merchandiseOrderByRelevanceFieldEnum = {
  order_price: 'order_price',
  merchandise_price: 'merchandise_price',
  color_value: 'color_value',
  size_value: 'size_value',
  order_status: 'order_status',
  package_number: 'package_number'
};

exports.Prisma.paymentOrderByRelevanceFieldEnum = {
  result_code: 'result_code',
  result_msg: 'result_msg',
  tid: 'tid',
  cancelled_tid: 'cancelled_tid',
  payment_status: 'payment_status',
  pay_method: 'pay_method',
  amount: 'amount',
  approve_no: 'approve_no',
  card_name: 'card_name',
  card_code: 'card_code',
  card_no: 'card_no',
  easy_pay: 'easy_pay',
  bank_code: 'bank_code',
  bank_name: 'bank_name',
  cancel_amount: 'cancel_amount',
  moid: 'moid'
};

exports.Prisma.play_gameOrderByRelevanceFieldEnum = {
  title: 'title',
  code: 'code'
};

exports.Prisma.play_level_rewardsOrderByRelevanceFieldEnum = {
  reward_type: 'reward_type',
  point: 'point'
};

exports.Prisma.play_roundOrderByRelevanceFieldEnum = {
  title: 'title'
};

exports.Prisma.play_round_levelsOrderByRelevanceFieldEnum = {
  title: 'title'
};

exports.Prisma.play_round_rewardsOrderByRelevanceFieldEnum = {
  reward_type: 'reward_type',
  point: 'point'
};

exports.Prisma.point_historyOrderByRelevanceFieldEnum = {
  point: 'point',
  type: 'type',
  detail_content: 'detail_content',
  action: 'action'
};

exports.Prisma.policyOrderByRelevanceFieldEnum = {
  content: 'content',
  title: 'title',
  type: 'type'
};

exports.Prisma.popupOrderByRelevanceFieldEnum = {
  image_origin_file_name: 'image_origin_file_name',
  image_server_file_name: 'image_server_file_name',
  image_url: 'image_url',
  link: 'link',
  title: 'title'
};

exports.Prisma.reportOrderByRelevanceFieldEnum = {
  additional_message: 'additional_message',
  content_type: 'content_type',
  status: 'status',
  report_type: 'report_type',
  answer: 'answer'
};

exports.Prisma.reward_historyOrderByRelevanceFieldEnum = {
  merchandise_amount: 'merchandise_amount',
  reward: 'reward',
  charge_explanation: 'charge_explanation'
};

exports.Prisma.rolling_paperOrderByRelevanceFieldEnum = {
  content: 'content'
};

exports.Prisma.search_keywordOrderByRelevanceFieldEnum = {
  keyword_string: 'keyword_string'
};

exports.Prisma.shipmentOrderByRelevanceFieldEnum = {
  road_address: 'road_address',
  detail_address: 'detail_address',
  recipient_name: 'recipient_name',
  recipient_phone_number: 'recipient_phone_number',
  shipping_request: 'shipping_request',
  courier_company: 'courier_company',
  tracking_number: 'tracking_number',
  shipping_status_hq_only: 'shipping_status_hq_only',
  shipping_status: 'shipping_status',
  courier_company_id: 'courier_company_id'
};

exports.Prisma.size_storyOrderByRelevanceFieldEnum = {
  scored_at: 'scored_at'
};

exports.Prisma.sms_verificationOrderByRelevanceFieldEnum = {
  number_code: 'number_code',
  phone_number: 'phone_number',
  verification_code: 'verification_code'
};

exports.Prisma.sound_source_logOrderByRelevanceFieldEnum = {
  song_id: 'song_id',
  title: 'title',
  album: 'album',
  artist: 'artist',
  service_type: 'service_type',
  upload_year_month: 'upload_year_month',
  fail_log: 'fail_log'
};

exports.Prisma.stickerOrderByRelevanceFieldEnum = {
  image_url: 'image_url'
};

exports.Prisma.styleOrderByRelevanceFieldEnum = {
  image_origin_file_name: 'image_origin_file_name',
  image_server_file_name: 'image_server_file_name',
  image_url: 'image_url',
  title: 'title'
};

exports.Prisma.termsOrderByRelevanceFieldEnum = {
  content: 'content',
  title: 'title'
};


exports.Prisma.ModelName = {
  alarm: 'alarm',
  alarm_failed: 'alarm_failed',
  app_version: 'app_version',
  ask: 'ask',
  banner_brand_home: 'banner_brand_home',
  banner_brand_list: 'banner_brand_list',
  banner_brand_story: 'banner_brand_story',
  banner_brand_thumbnail: 'banner_brand_thumbnail',
  banner_pick_brand: 'banner_pick_brand',
  base_info: 'base_info',
  body_shape: 'body_shape',
  brand_adjustment: 'brand_adjustment',
  brand_admin_user: 'brand_admin_user',
  brand_application: 'brand_application',
  brand_event: 'brand_event',
  brand_grade_graph: 'brand_grade_graph',
  brand_heart: 'brand_heart',
  brand_story: 'brand_story',
  brand_story_image: 'brand_story_image',
  color_chart: 'color_chart',
  comment: 'comment',
  coupon: 'coupon',
  coupon_descriptions: 'coupon_descriptions',
  couriers: 'couriers',
  diary: 'diary',
  faeferhouse_profile: 'faeferhouse_profile',
  faeferhouse_profile_file: 'faeferhouse_profile_file',
  faeferhouse_profile_visit: 'faeferhouse_profile_visit',
  faq_category: 'faq_category',
  fashion_story: 'fashion_story',
  fashion_story_file: 'fashion_story_file',
  fashion_story_item: 'fashion_story_item',
  fashion_story_view: 'fashion_story_view',
  feed: 'feed',
  feed_activity: 'feed_activity',
  feed_clothing_analysis: 'feed_clothing_analysis',
  feed_files: 'feed_files',
  feed_likes: 'feed_likes',
  feed_merchs: 'feed_merchs',
  feed_place: 'feed_place',
  feed_search: 'feed_search',
  feed_season: 'feed_season',
  feed_store: 'feed_store',
  feed_styles: 'feed_styles',
  fsmh_event: 'fsmh_event',
  main_ad_sentence: 'main_ad_sentence',
  member_access_log: 'member_access_log',
  member_account: 'member_account',
  member_block: 'member_block',
  member_body_measurement: 'member_body_measurement',
  member_coupons: 'member_coupons',
  member_follows: 'member_follows',
  member_grade: 'member_grade',
  member_grade_activity: 'member_grade_activity',
  member_grade_graph: 'member_grade_graph',
  member_notification_setting: 'member_notification_setting',
  member_profile_views: 'member_profile_views',
  member_shipping: 'member_shipping',
  member_styles: 'member_styles',
  member_unregister_log: 'member_unregister_log',
  member_user: 'member_user',
  merch_body_shape: 'merch_body_shape',
  merch_brand: 'merch_brand',
  merch_cart: 'merch_cart',
  merch_category: 'merch_category',
  merch_clothing_analysis: 'merch_clothing_analysis',
  merch_files: 'merch_files',
  merch_files_multi_upload: 'merch_files_multi_upload',
  merch_heart: 'merch_heart',
  merch_information: 'merch_information',
  merch_information_multi_upload: 'merch_information_multi_upload',
  merch_laundry: 'merch_laundry',
  merch_option: 'merch_option',
  merch_option_backup_04172025: 'merch_option_backup_04172025',
  merch_option_multi_upload: 'merch_option_multi_upload',
  merch_option_test: 'merch_option_test',
  merch_order: 'merch_order',
  merch_review: 'merch_review',
  merch_review_helpful: 'merch_review_helpful',
  merch_review_image: 'merch_review_image',
  merch_review_like: 'merch_review_like',
  merch_search: 'merch_search',
  merch_store: 'merch_store',
  merchandise: 'merchandise',
  merchandise_details_card: 'merchandise_details_card',
  merchandise_details_image_url: 'merchandise_details_image_url',
  merchandise_multi_upload: 'merchandise_multi_upload',
  merchandise_tag: 'merchandise_tag',
  merchandise_tag_multi_upload: 'merchandise_tag_multi_upload',
  notice: 'notice',
  order_cancel: 'order_cancel',
  order_cancel_image: 'order_cancel_image',
  order_cancel_memo: 'order_cancel_memo',
  order_line_creator: 'order_line_creator',
  order_map_merchandise: 'order_map_merchandise',
  payment: 'payment',
  play_game: 'play_game',
  play_level_rewards: 'play_level_rewards',
  play_member_games: 'play_member_games',
  play_member_level_records: 'play_member_level_records',
  play_member_level_reward_history: 'play_member_level_reward_history',
  play_member_round_records: 'play_member_round_records',
  play_member_round_reward_history: 'play_member_round_reward_history',
  play_play_games: 'play_play_games',
  play_round: 'play_round',
  play_round_levels: 'play_round_levels',
  play_round_rewards: 'play_round_rewards',
  point_history: 'point_history',
  policy: 'policy',
  popup: 'popup',
  profile_heart: 'profile_heart',
  profile_map_stickers: 'profile_map_stickers',
  profile_stickers: 'profile_stickers',
  report: 'report',
  reward_history: 'reward_history',
  rolling_paper: 'rolling_paper',
  search_keyword: 'search_keyword',
  shipment: 'shipment',
  size_story: 'size_story',
  sms_verification: 'sms_verification',
  sound_source_log: 'sound_source_log',
  statistics: 'statistics',
  sticker: 'sticker',
  style: 'style',
  terms: 'terms'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
